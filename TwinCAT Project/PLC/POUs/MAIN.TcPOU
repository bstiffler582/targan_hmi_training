<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{ae847c27-47be-471f-a25a-90ca507bfa69}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	rand	: ARRAY [0..9] OF DRAND;
	ton		: ARRAY [0..9] OF TON;
	fTrend	AT %Q* : ARRAY[0..9] OF LREAL;
	i		: DINT;
	
	iTest1	AT %Q* : DINT;
	iTest2	AT %Q* : DINT;
	
	fbJson			: FB_JsonSaxPrettyWriter;
	fbJsonDataType 	: FB_JsonReadWriteDataType;
	sSer			: STRING(511);
	iJsonLen		: UDINT;
	bRead			: BOOL;
	bWrite			: BOOL;
	
	//fbFileIo		: FB_FileIO;
	
	bInit			: BOOL := TRUE;
	bRaiseAlarm		: BOOL;
	bClear			: BOOL;
	fbFirstAlarm	: FB_TcMessage;
	fbSecondAlarm	: FB_TcAlarm;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
	fbSecondAlarm.CreateEx(TC_EVENTS.Alarms.MyFirstAlarm, FALSE, 0);
	bInit := FALSE;
END_IF

IF bRaiseAlarm THEN
	fbSecondAlarm.ipArguments.AddDInt(1001);
	fbSecondAlarm.Raise(0);
	bRaiseAlarm := FALSE;
END_IF

IF bClear THEN
	fbSecondAlarm.Clear(0, TRUE);
	bClear := FALSE;
END_IF

(*
FOR i := 0 TO 9 DO
	rand[i](Seed:=TO_INT(i));
	ton[i](IN:=(NOT ton[i].Q), PT:=TO_TIME(i * 1000));
	
	IF ton[i].Q THEN
		fTrend[i] := rand[i].Num * 10;
	END_IF
END_FOR

IF bRead THEN
	IF fbFileIo.ReadAllText('/test.json', sSer) THEN
		fbJsonDataType.SetSymbolFromJson(sSer, 'DUT_ServoRecipe', SIZEOF(GVL.stTest.stInner), ADR(GVL.stTest.stInner));
		bRead := FALSE;
	END_IF
	//sSer := fbJsonDataType.GetJsonStringFromSymbol('DUT_ServoRecipe' ,SIZEOF(GVL.stTest.stInner), ADR(GVL.stTest.stInner));
	//MEMSET(ADR(GVL.stTest.stInner), 0, SIZEOF(GVL.stTest.stInner)); 
	//bRead := FALSE;
END_IF

IF bWrite THEN
	fbJson.ResetDocument();
	fbJsonDataType.AddJsonValueFromSymbol(fbJson, 'DUT_ServoRecipe', SIZEOF(DUT_ServoRecipe), ADR(GVL.stTest.stInner));
	fbJson.CopyDocument(sSer, SIZEOF(sSer));
	//sSer := fbJsonDataType.GetJsonStringFromSymbol('DUT_ServoRecipe' ,SIZEOF(GVL.stTest.stInner), ADR(GVL.stTest.stInner));
	IF fbFileIo.WriteAllText('/test.json', sSer) THEN
		sSer := '';
		bWrite := FALSE;
	END_IF
END_IF
*)]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="197" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="4" />
      <LineId Id="28" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="173" Count="2" />
      <LineId Id="134" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="126" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>